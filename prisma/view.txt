
CREATE OR REPLACE VIEW providers_v
AS
SELECT p.user_id, p.provider_id, p.plan_id, p.status, COUNT(c.consumer_id) AS total_consume, s.plan_limit AS plan_limit, ((100 * COUNT(c.consumer_id)) / s.plan_limit) AS usage_percent FROM providers AS p LEFT JOIN "plans" AS s ON p.plan_id = s.plan_id LEFT JOIN consumers AS c ON p.provider_id = c.provider_id GROUP BY p.user_id, p.provider_id, s.plan_limit

CREATE OR REPLACE VIEW consumer_activities_v
AS
SELECT user_id, provider_id, COUNT(1) AS activity, SUM(frames) AS frames, "updatedAt"::DATE FROM user_activities WHERE provider_id IS NOT NULL GROUP BY provider_id, user_id, "updatedAt"::DATE ORDER BY "updatedAt" DESC


****************************
SELECT s.subscription_id, COUNT(p.provider_id) AS subscribers, COUNT(c.consumer_id) AS consumers FROM subscriptions AS s LEFT JOIN providers AS p ON s.subscription_id = p.subscription_id LEFT JOIN consumers AS c ON p.provider_id = c.provider_id WHERE p."isActive" = true AND c."isActive" = true GROUP BY s.subscription_id, p.provider_id